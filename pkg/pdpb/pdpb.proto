syntax = "proto2";
package pdpb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;


service PDService {
  rpc GetLeader (LeaderReq) returns (LeaderRsp) {}
  rpc AllocID (AllocIDReq) returns (AllocIDRsp) {}
  rpc GetClusterID(GetClusterIDReq) returns (GetClusterIDRsp) {}
  rpc IsClusterBootstrap (IsClusterBootstrapReq) returns (IsClusterBootstrapRsp) {}
  rpc BootstrapCluster (BootstrapClusterReq) returns (BootstrapClusterRsp) {}
  rpc CellHeartbeat (CellHeartbeatReq) returns (CellHeartbeatRsp) {}
}

enum ConfChangeType {
    AddNode    = 0;
    RemoveNode = 1;
}

message ChangePeer {
    optional ConfChangeType type = 1 [(gogoproto.nullable) = false];
    optional Meta peer           = 2 [(gogoproto.nullable) = true];
}

message Leader {
    optional uint64 id   = 1 [(gogoproto.nullable) = false];
    optional string name = 2 [(gogoproto.nullable) = false];
    optional string addr = 3 [(gogoproto.nullable) = false];
}


message Meta {
    required bytes data = 1;
}

message LeaderReq {
    optional string from = 1 [(gogoproto.nullable) = false];
    optional uint64 id   = 2 [(gogoproto.nullable) = false];
}

message LeaderRsp {
    optional Leader leader = 1 [(gogoproto.nullable) = false];
}

message GetClusterIDReq {
    optional string from = 1 [(gogoproto.nullable) = false];
    optional uint64 id   = 2 [(gogoproto.nullable) = false];
}

message GetClusterIDRsp {
    optional uint64 id = 1 [(gogoproto.nullable) = false];
}

message AllocIDReq {
    optional string from = 1 [(gogoproto.nullable) = false];
    optional uint64 id   = 2 [(gogoproto.nullable) = false];
}

message AllocIDRsp {
    optional uint64 id = 1 [(gogoproto.nullable) = false];
}

message IsClusterBootstrapReq {
    optional string from = 1 [(gogoproto.nullable) = false];
    optional uint64 id   = 2 [(gogoproto.nullable) = false];
}

message IsClusterBootstrapRsp {
    optional bool value = 1 [(gogoproto.nullable) = false];
}

message BootstrapClusterReq {
    optional string from  = 1 [(gogoproto.nullable) = false];
    optional uint64 id    = 2 [(gogoproto.nullable) = false];
    optional Meta   store = 3 [(gogoproto.nullable) = false];
    optional Meta   cell  = 4 [(gogoproto.nullable) = false];
}

message BootstrapClusterRsp {
    optional bool alreadyBootstrapped = 1 [(gogoproto.nullable) = false];
}

message CellHeartbeatReq {
    optional string from   = 1 [(gogoproto.nullable) = false];
    optional uint64 id     = 2 [(gogoproto.nullable) = false];
    optional Meta   cell   = 3 [(gogoproto.nullable) = false];
    optional Meta   leader = 4 [(gogoproto.nullable) = true];
}

message CellHeartbeatRsp {
    optional ChangePeer changePeer = 1 [(gogoproto.nullable) = false];
}